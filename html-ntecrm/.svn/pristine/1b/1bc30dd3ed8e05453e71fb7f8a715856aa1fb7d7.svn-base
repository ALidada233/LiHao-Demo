<template>
  <div>
    <!-- <el-button :style="rotate" type="primary" style="margin-top:5px;" icon="el-icon-menu" size="medium" class="left" circle @click="toggleAside"></el-button> -->
    <i
      class="iconfont left"
      :style="rotate"
      style="line-height:45px;color:#ccc;font-size:25px;cursor:default;margin-left: 20px;"
      icon="el-icon-menu"
      size="medium"
      @click="toggleAside"
    >&#xe621;</i>
    <nav-title class="left"></nav-title>
    <ul class="right header-right">
      <li class="left" @click="screenHandle">
        <!--展开全屏关闭全屏-->
        <!-- <el-tooltip class="item" effect="dark" content="全屏或退出全屏" placement="bottom">
					<i class="el-icon-rank"></i>
        </el-tooltip>-->
      </li>
      <!-- <li class="left" style="margin-top: 6px;">
	  			<el-tooltip class="item" effect="dark" content="主题色" placement="bottom">
	  				<el-color-picker v-model="themeColor" class="colorPick" ref="colorPicker" size="mini" @change="changeTheme"></el-color-picker>
	  			</el-tooltip>
      </li>-->
      <li class="left">
        <i
          class="el-icon-chat-dot-round"
          @click="drawer = true;queryInformationList()"
          style="font-size:20px;    vertical-align: middle;"
        ></i>
      </li>
      <li class="left" v-if="this.$route.path!='/admin/home'">
        <el-tooltip class="item" effect="dark" content="公告" placement="bottom">
          <i class="iconfont" @click="changeNoticeStatus">&#xe662;</i>
        </el-tooltip>
      </li>

      <!-- <li class="left">
	  			<router-link :to="{path:'message'}">
		  			<el-tooltip class="item" effect="dark" content="通知" placement="bottom">
			  			<el-badge is-dot class="header-msg">
						  <i class="iconfont" style="color:#333;">&#xe608;</i>
						</el-badge>
					</el-tooltip>
				</router-link>
      </li>-->
      <li class="left">
        <el-dropdown @command="handleCommand">
          <span class="el-dropdown-link">
            <i class="iconfont">&#xe643;</i>
            {{this.$store.state.loginStatu.c_user}}
            <i
              class="el-icon-arrow-down el-icon--right"
            ></i>
          </span>
          <el-dropdown-menu slot="dropdown">
            <el-dropdown-item command="info">个人信息</el-dropdown-item>
            <el-dropdown-item command="exit">退出登录</el-dropdown-item>
          </el-dropdown-menu>
        </el-dropdown>
      </li>
    </ul>
    <el-drawer title="我是消息" :visible.sync="drawer" :with-header="false" size="40%">
      <template>
        <div class="message">
          <div style="padding:20px;">
             <div style="width:210px;">
              <template>
                <el-tabs @tab-click="handleClick">
                  <el-tab-pane label="全部"></el-tab-pane>
                  <el-tab-pane label="未读"></el-tab-pane>
                  <el-tab-pane label="已读"></el-tab-pane>
                </el-tabs>
              </template>
            </div>
            <el-table
              v-loading="loading"
              :data="dataList"
              :border="true"
              :height="tableHeight"
              style="width: 100%"
              :header-cell-style="{background:'#EFEDF0'}"
              ref="table"
              class="msgTable"
            >
            <el-table-column prop="type" label="类型" align="center" width="100">
                <template slot-scope="scope">
                  <!-- 消息类型1客户新增2联系人新增3折扣申请4折扣审批5产品资料6订单申请7订单确认8采购订单9货期确认10技术支持11发票申请12发票审批 -->
                  <el-tag type="info" v-if="scope.row.type==1">客户新增</el-tag>
                  <el-tag type="info" v-if="scope.row.type==2">联系人新增</el-tag>
                  <el-tag type="info" v-if="scope.row.type==3">折扣申请</el-tag>
                  <el-tag type="info" v-if="scope.row.type==4">折扣审批</el-tag>
                  <el-tag type="info" v-if="scope.row.type==5">产品资料</el-tag>
                  <el-tag type="info" v-if="scope.row.type==6">订单申请</el-tag>
                  <el-tag type="info" v-if="scope.row.type==7">订单确认</el-tag>
                  <el-tag type="info" v-if="scope.row.type==8">采购订单</el-tag>
                  <el-tag type="info" v-if="scope.row.type==9">货期确认</el-tag>
                  <el-tag type="info" v-if="scope.row.type==10">技术支持</el-tag>
                  <el-tag type="info" v-if="scope.row.type==11">发票申请</el-tag>
                  <el-tag type="info" v-if="scope.row.type==12">发票审批</el-tag>
                </template>
            </el-table-column>
             <el-table-column prop="status" label="状态" align="center" width="100">
                <template slot-scope="scope">
                  <el-tag type="danger" v-if="scope.row.status==0">未读</el-tag>
                  <el-tag type="success" v-if="scope.row.status==1">已读</el-tag>
                </template>
              </el-table-column>
              <el-table-column prop="context" label="消息内容" align="center"></el-table-column>
              <el-table-column prop="createName" label="发送人" align="center" width="80"></el-table-column>
              <el-table-column prop="createTime" label="发送日期" align="center" width="160"></el-table-column>
            </el-table>
            <div style="text-align: right;padding:20px 10px;">
              <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page.sync="currentPage"
                :page-sizes="[5, 10, 20, 30]"
                :page-size="10"
                layout="sizes, prev, pager, next, total"
                :total="pageCount"
              ></el-pagination>
            </div>
          </div>
        </div>
      </template>  
    </el-drawer>
  </div>
</template>
<script type="text/javascript">
 import { queryInformationList } from "@/util/req/home/index.js";
import { colorRgba } from "util/fn/colorConversion"; //十六进制转换rgba
import { exit } from "util/req/login.js";
import navTitle from "@/components/common/navTitle";
export default {
  name: "Header",
  data() {
    return {
      themeColor: localStorage.getItem("headerColor") || "#304156",
      asideHeight: "",
      mainHeight: "",
      screenState: "exit",
      rotate: {
        transform: "rotate(0deg)",
        transition: "transform 0.5s linear"
      },
      isCollapse: this.$store.state.isCollapse, //侧边栏伸缩状态
      asideState: true,
      s: 0,
      rt: 0,
      drawer: false,
      tableHeight: null,
      activeName: "first",
      dataList: [{}],
      loading: false,
      pageSize: 10,
      page: 1,
      currentPage: 1,
      pageCount: null, //当前页
      status:null
    };
  },
  methods: {
    handleClick(tab) {
      if (tab.index == 0) {
        this.status = null;
      } else {
        this.status = tab.index - 1 + "";
      }
      this.queryInformationList();
    },
    queryInformationList() {
      //查询列表数据
      var params = {
        pageSize: this.pageSize,
        page: this.currentPage,
        status:this.status
      };
      this.loading = true;
      queryInformationList(params, res => {
        this.dataList = res.data.list;
        this.pageCount = res.data.pageCount;
        this.$refs.table.bodyWrapper.scrollTop = 0;
        setTimeout(() => {
          this.loading = false;
        }, 200);
      });
    },
    handleSizeChange(pageSize) {
      //数据条数改变时
      this.pageSize = pageSize;
      this.currentPage = 1;
      this.queryDiscountList();
    },
    handleCurrentChange(currentPage) {
      //选取分页
      this.currentPage = currentPage;
      this.queryDiscountList();
    },
    //设置侧边栏的高度
    resetHeight() {
      var clientHeight = document.documentElement.clientHeight;
      this.asideHeight = clientHeight;
      this.mainHeight = clientHeight - 45;
      this.$emit("changeAsideHeight", this.asideHeight, this.mainHeight);
    },
    //设置全屏
    fullScreen() {
      var el = document.documentElement;
      var rfs =
        el.requestFullScreen ||
        el.webkitRequestFullScreen ||
        el.mozRequestFullScreen ||
        el.msRequestFullscreen;

      if (typeof rfs != "undefined" && rfs) {
        rfs.call(el);
        setTimeout(() => {
          this.resetHeight();
        }, 100);
      }
      return;
    },
    //退出全屏
    exitScreen() {
      if (document.exitFullscreen) {
        document.exitFullscreen();
      } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
      } else if (document.webkitCancelFullScreen) {
        document.webkitCancelFullScreen();
      } else if (document.msExitFullscreen) {
        document.msExitFullscreen();
      }
      if (typeof cfs != "undefined" && cfs) {
        cfs.call(el);
      }
      setTimeout(() => {
        this.resetHeight();
      }, 100);
    },
    //ie低版本的全屏，退出全屏都这个方法
    iefull() {
      var el = document.documentElement;
      var rfs = el.msRequestFullScreen;
      if (typeof window.ActiveXObject != "undefined") {
        //这的方法 模拟f11键，使浏览器全屏
        var wscript = new ActiveXObject("WScript.Shell");
        if (wscript != null) {
          wscript.SendKeys("{F11}");
        }
      }
    },
    //改变主题
    changeTheme() {
      if (this.themeColor == null) {
        this.themeColor = "#4F5965";
      }
      var AsideRgba = colorRgba(this.themeColor, 0.9);
      localStorage.setItem("headerColor", this.themeColor);
      localStorage.setItem("asideColor", AsideRgba);
      this.$store.state.themeColor.headerColor = this.themeColor;
      this.$store.state.themeColor.asideColor = AsideRgba;
    },
    //全屏处理
    screenHandle() {
      if (this.screenState == "exit") {
        this.screenState = "full";
        this.fullScreen();
      } else {
        this.screenState = "exit";
        this.exitScreen();
      }
    },
    //切换侧边栏
    toggleAside() {
      this.s = this.s + 1;
      this.rt = 180 * this.s;
      this.rotate.transform = "rotate(" + this.rt + "deg)";
      this.isCollapse = !this.isCollapse;
      this.asideState = !this.asideState;
      this.$store.commit("changeCollapse", this.isCollapse);
      this.$emit("toggleChange", this.asideState);
    },
    //退出登录
    handleCommand(sel) {
      if (sel == "exit") {
        exit(res => {
          if (res.data.msgCode == 200) {
            this.$store.state.asideDefaultActive = "home";
            this.$store.commit("exitLogin");
          }
          //注销由采购技术带过来的参数，原来查询需求
          sessionStorage.removeItem("buyer_department");
          sessionStorage.removeItem("technical_department");
          sessionStorage.removeItem("routesArr");
          this.$router.replace("/");
        });
      } else if (sel == "info") {
        this.$router.push({ path: "info" });
      }
    },
    changeNoticeStatus() {
      this.$store.state.noticeStatus = !this.$store.state.noticeStatus;
    }
  },
  components: {
    navTitle
  },
  mounted() {
    this.tableHeight =
      window.innerHeight - this.$refs.table.$el.offsetTop - 200;
  }
};
</script>
<style lang="scss" scoped>
.iconfont {
  vertical-align: middle;
  font-size: 22px;
}
.header-right {
  color: #333;
  line-height: 45px;
}
.header-right > li {
  padding: 0 15px;
  cursor: default;
  font-size: 14px;
}
.el-dropdown {
  color: #333;
}
.header-msg /deep/.el-badge__content.is-fixed.is-dot {
  right: 3px;
  top: 15px !important;
}
.colorPick /deep/ .el-color-picker__trigger {
  width: 22px;
  height: 22px;
}
</style>
