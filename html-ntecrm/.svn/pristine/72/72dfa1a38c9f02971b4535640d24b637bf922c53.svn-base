<template>
  <div class="login-container" style="background:url('https://img.alicdn.com/tfs/TB1zsNhXTtYBeNjy1XdXXXXyVXa-2252-1500.png') center center no-repeat; background-size:100% 100%;">
   
       <div style="position:absolute;left: 25%;z-index: 1000;margin-top: 250px;">
          <h2 style="color:#fff;font-size: 38px;">欢迎使用</h2>
          <h3 style="color:#fff;font-size: 35px;margin-top: 10px;">客户管理系统</h3>
      </div>
    <el-form ref="loginForm" :model="loginForm" :rules="loginRules" class="login-form" auto-complete="on" label-position="left">
      <div class="title-container">
        <h3 class="title">登录</h3>
      </div>

      <el-form-item prop="username" style="border-bottom: 1px solid #ddd;">
        <span class="svg-container svg-container_login">
          <i class="iconfont">&#xe628;</i>
        </span>
        <el-input
          style="width: 70%;color: #000;"
          v-model="loginForm.username"
          placeholder="请输入您的名字"
          name="username"
          type="text"
          auto-complete="on"
        />
      </el-form-item>

      <el-form-item prop="password" style="border-bottom: 1px solid #ddd;">
        <span class="svg-container">
          <i class="iconfont">&#xe66b;</i>
        </span>
        <el-input
          style="width: 70%;color: #000;"
          :type="passwordType"
          v-model="loginForm.password"
          placeholder="请输入密码"
          name="password"
          auto-complete="on"
          @keyup.enter.native="handleLogin" />
        <span class="show-pwd" @click="showPwd">
          <i class="iconfont">&#xe679;</i>
        </span>
      </el-form-item>

      <el-button type="primary" style="width:100%;margin-top:30px;" @click.native.prevent="handleLogin">登录</el-button>
    </el-form>
  </div>
</template>

<script>

import {LoginFn} from "util/req/login.js"
export default {
  name: 'Login',
  data() {
    const validateUsername = (rule, value, callback) => {
      this.isvalidUsername(value,function(state,msg){
        if(!state){
          callback("用户名"+msg)
        }else{
          callback();
        }
      })
    }
    const validatePassword = (rule, value, callback) => {
      this.isvalidUsername(value,function(state,msg){
        if(!state){
          callback("密码"+msg)
        }else{
          callback();
        }
      })
    }
    return {
      loginForm: {
        username: '',
        password: ''
      },
      loginRules: {
        username: [{ required: true, trigger: 'blur', validator: validateUsername }],
        password: [{ required: true, trigger: 'blur', validator: validatePassword }]
      },
      passwordType: 'password',
      showDialog: false,
      redirect: undefined
    }
  },
  watch: {
   
  },
  created() {

  },
  destroyed() {
 
  },
  methods: {
    isvalidUsername(val,callback){
      var _this=this;
       if(val.length>=12 || val.length ==0){
        callback(false,"1至12个字体以内");
       }else{
        callback(true,'');
       }
    },
    showPwd() {
      if (this.passwordType === 'password') {
        this.passwordType = ''
      } else {
        this.passwordType = 'password'
      }
    },
    handleLogin() {
      var _this=this;
      this.$refs.loginForm.validate(valid => {
        if (valid) {
          LoginFn(this.loginForm.username,this.loginForm.password,(res)=>{
            if(res.msgCode==200){
              //登录成功
              this.$store.commit("userHandle",this.loginForm.username);
              this.$store.state.resourceList=res.data.resourceList;

              //自己定义的路由
              var dynamicRouter=[
                  {
                  path: 'home',
                  name: 'home',
                  component: () => import('@/page/admin/home/index')
                  },
                  {
                  path: 'customer',
                  name: 'customer',
                  component: () => import('@/page/admin/customerDetails/index')
                  },
                  {
                  path: 'goods',
                  name: 'goods',
                  component: () => import('@/page/admin/goods/index')
                  },
                  {
                  path: 'operator',
                  name: 'operator',
                  component: () => import('@/page/admin/operator/index')
                  },
                  {
                  path: 'role',
                  name: 'role',
                  component: () => import('@/page/admin/role/index')
                  },
                  {
                  path: 'message',
                  name: 'message',
                  component: () => import('@/page/admin/message/index')
                  },
                  {
                  path: 'info',
                  name: 'info',
                  component: () => import('@/page/admin/info/index')
                  },
                  {
                  path: 'region',
                  name: 'region',
                  component: () => import('@/page/admin/region/index')
                  },
                  {
                  path: 'offerList',
                  name: 'offerList',
                  component: () => import('@/page/admin/offerList/index')
                  },
                  {
                  path: 'system',
                  name: 'system',
                  component: () => import('@/page/admin/system/index')
                  },
                  {
                  path: 'discountApp',
                  name: 'discountApp',
                  component: () => import('@/page/admin/discountApp/index')
                  },
                  {
                  path: 'contract',
                  name: 'contract',
                  component: () => import('@/page/admin/contract/index')
                  },
                  {
                  path: 'order',
                  name: 'order',
                  component: () => import('@/page/admin/order/index')
                  },
                  {
                  path: 'jurisdiction',
                  name: 'jurisdiction',
                  component: () => import('@/page/admin/jurisdiction/index')
                  }
              ]
              //请求回来的路由  
              var permissionList=res.data.resourceList||[];
              var routesArr=[];
              if(permissionList.length>0){
                  routesArr = this.recursionRouter(permissionList, dynamicRouter)
              }
              console.log('routesArr',routesArr);
              sessionStorage.setItem('routesArr',JSON.stringify(routesArr))
              var params=[{
                      path: '/admin',
                      name: 'Admin',
                      redirect: '/admin/home',
                      component:  () => import('@/page/admin'),
                      children:routesArr
                  }]
             // this.$router.addRoutes(params)
              this.$router.replace('/admin');
  
            }else{
              //登录失败
              this.$alert(res.msg, '登录提示', {                    
                confirmButtonText: '确定',
                callback: action => {
                  this.loginForm.username="";
                  this.loginForm.password="";
                }
              })
            }
          })
        }else{ 
          return false
        }
      })
    },

    recursionRouter(userRouter = [], allRouter = []){
      var dynamicRouter=[
                  {
                  path: 'home',
                  name: 'home',
                  component: () => import('@/page/admin/home/index')
                  },
                  {
                  path: 'customer',
                  name: 'customer',
                  component: () => import('@/page/admin/customerDetails/index')
                  },
                  {
                  path: 'goods',
                  name: 'goods',
                  component: () => import('@/page/admin/goods/index')
                  },
                  {
                  path: 'operator',
                  name: 'operator',
                  component: () => import('@/page/admin/operator/index')
                  },
                  {
                  path: 'role',
                  name: 'role',
                  component: () => import('@/page/admin/role/index')
                  },
                  {
                  path: 'message',
                  name: 'message',
                  component: () => import('@/page/admin/message/index')
                  },
                  {
                  path: 'info',
                  name: 'info',
                  component: () => import('@/page/admin/info/index')
                  },
                  {
                  path: 'region',
                  name: 'region',
                  component: () => import('@/page/admin/region/index')
                  },
                  {
                  path: 'offerList',
                  name: 'offerList',
                  component: () => import('@/page/admin/offerList/index')
                  },
                  {
                  path: 'system',
                  name: 'system',
                  component: () => import('@/page/admin/system/index')
                  },
                  {
                  path: 'discountApp',
                  name: 'discountApp',
                  component: () => import('@/page/admin/discountApp/index')
                  },
                  {
                  path: 'contract',
                  name: 'contract',
                  component: () => import('@/page/admin/contract/index')
                  },
                  {
                  path: 'order',
                  name: 'order',
                  component: () => import('@/page/admin/order/index')
                  },
                  {
                  path: 'jurisdiction',
                  name: 'jurisdiction',
                  component: () => import('@/page/admin/jurisdiction/index')
                  }
              ]
      var realRoutes = []
      allRouter.forEach((v, i) => {
          userRouter.forEach((item, index) => {
              if (item.url === v.name) {
                  if (item.children && item.children.length > 0) {
                      //v.children = this.recursionRouter(item.children,dynamicRouter);
                       realRoutes=realRoutes.concat(this.recursionRouter(item.children,dynamicRouter))
                  }
                  realRoutes.push(v)
              }
          })
      })
      return realRoutes
    }
  },
  mounted(){
   // console.log(sessionStorage.getItem("c_token"));
  }
}
</script>

<style rel="stylesheet/scss" lang="scss">
  /* 修复input 背景不协调 和光标变色 */
  /* Detail see https://github.com/PanJiaChen/vue-element-admin/pull/927 */

  $bg:#283443;
  $light_gray:#eee;
  $cursor: #fff;

  @supports (-webkit-mask: none) and (not (cater-color: $cursor)) {
    .login-container .el-input input{
      color: #333;
      &::first-line {
        color: #333;
      }
    }
  }

  /* reset element-ui css */
  .login-container {
    .el-input {
      display: inline-block;
      height: 47px;
      width: 85%;
      input {
        background: transparent;
        border: 0px;
        -webkit-appearance: none;
        border-radius: 0px;
        padding: 12px 5px 12px 15px;
        height: 47px;
        &:-webkit-autofill {
          -webkit-box-shadow: 0 0 0px 1000px #fff inset !important;
          -webkit-text-fill-color: #333 !important;
        }
      }
    }
    .el-form-item {
      border: 1px solid rgba(255, 255, 255, 0.1);
      background: #fff;
      border-radius: 5px;
      color: #454545;
    }
  }
</style>

<style rel="stylesheet/scss" lang="scss" scoped>
$bg:#2d3a4b;
$dark_gray:#889aa4;
$light_gray:#eee;

.login-container {
  position: fixed;
  height: 100%;
  width: 100%;
  padding:20px;
  // box-sizing: border-box;
  // background-color: $bg;

  .login-form {
    position: absolute;
    right: 17%;
    width: 270px;
    max-width: 100%;
    padding: 35px 35px 40px 35px;
    margin: 120px auto;
    background: #fff;
    border-radius: 10px;
  }
  .tips {
    font-size: 14px;
    color: #fff;
    margin-bottom: 10px;
    span {
      &:first-of-type {
        margin-right: 16px;
      }
    }
  }
  .svg-container {
    padding: 6px 5px 6px 15px;
    color: $dark_gray;
    vertical-align: middle;
    width: 30px;
    display: inline-block;
    &_login {
      font-size: 20px;
    }
  }
  .title-container {
    position: relative;
    .title {
      font-size: 20px;
      color: #409EFF;
      margin: 0px auto 25px auto;
      text-align: center;
      font-weight: bold;
    }
    .set-language {
      color: #fff;
      position: absolute;
      top: 5px;
      right: 0px;
    }
  }
  .show-pwd {
    position: absolute;
    right: 10px;
    top: 7px;
    font-size: 16px;
    color: $dark_gray;
    cursor: pointer;
    user-select: none;
  }
  .thirdparty-button {
    position: absolute;
    right: 35px;
    bottom: 28px;
  }
}
</style>