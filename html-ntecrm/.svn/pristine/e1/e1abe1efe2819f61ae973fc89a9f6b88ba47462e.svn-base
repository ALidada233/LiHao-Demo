<template>
	<div class="customerDemand" id="customerDemand" ref="customerDemand">
		 <div style="margin-top: 5px;margin-left:20px;" class="state">
			<span :style="{'background': demandStatus==0?'#409eff':'#8D9BA9'}" @click="selectSearchState('0')">待确认</span>
			<span :style="{'background': demandStatus==1?'#409eff':'#8D9BA9'}" @click="selectSearchState('1')">已确认</span>
			<span :style="{'background': demandStatus==2?'#409eff':'#8D9BA9'}" @click="selectSearchState('2')">已报价</span>
			<span :style="{'background': demandStatus==3?'#409eff':'#8D9BA9'}" @click="selectSearchState('3')">生成报价单</span>
			<span :style="{'background': demandStatus==4?'#409eff':'#8D9BA9'}" @click="selectSearchState('4')">生成合同</span>
			<span :style="{'background': demandStatus==5?'#409eff':'#8D9BA9'}" @click="selectSearchState('5')">生成订单</span>
			<span :style="{'background': demandStatus==6?'#409eff':'#8D9BA9'}" @click="selectSearchState('6')">已作废</span>
		</div>
		<div style="padding:20px;">
			<!-- <h2 style="font-size: 16px;">需求列表</h2> -->
			<div class="left" style="margin-bottom: 20px;">
					<el-select no-data-text="加载中" clearable v-model="selectLinkMan" filterable @change="searchLinkName(selectLinkMan)"  placeholder="请选择公司">
					    <el-option
					      v-for="(item,index) in customerList"
					      :key="index"
					      :label="item.custCompanyName"
					      :value="item.custCompanyName">
					    </el-option>
					</el-select>
					<el-select no-data-text="加载中" clearable v-model="selectConId" filterable  placeholder="请选择联系人">
					    <el-option
					      v-for="(item,index) in selectLinkList"
					      :key="index"
					      :label="item.conName"
					      :value="item.conId">
					    </el-option>
					</el-select>
					<el-select v-model="saleId" placeholder="请选择负责人" :filterable="true"  :clearable="true" style="width:150px;margin-top: 10px;">
						<el-option 
						v-for="(item,index) in salesList"
						:key="index"
						:label="item.name" 
						:value="item.id">
						</el-option>
				    </el-select>
					<el-select v-model="typeStatus" placeholder="请选择类型" :filterable="true"  :clearable="true" style="width:150px;margin-top: 10px;">
						<el-option label="标准" value="1"></el-option>
						<el-option label="非标准" value="2"></el-option>
				    </el-select>
					<el-button type="primary" style="margin-top:10px;" size="small" @click="getDemandList()">查询</el-button>
			</div>
			<div class="right" style="margin-top: 12px;">
				<el-button type="primary" size="small" @click="needVisible=true;">新增需求</el-button>
				<el-button type="primary" size="small" @click="contractDialogVisible=true;contractType='offer'">生成报价单</el-button>
				<el-button type="primary" size="small" @click="contractDialogVisible=true;contractType='contract'">生成合同</el-button>
			</div>
			<el-table
			    v-loading="loading"
			    :data="dataList"
				:border="true"
				:fit="true"
			    style="width: 100%;">
			    <el-table-column
			      label="操作"
			      width="280"
			      >
			      <template slot-scope="props">
			      	 <el-button type="primary" size="mini" v-if="props.row.status==0" @click="saveDemandStatus(props.row.id,1)" style="margin-bottom:10px;">确认</el-button>
			      	 <el-button type="primary" size="mini" @click="offerHandle(props.row.id,props.row.status)" v-if="props.row.status==1" style="margin-bottom:10px;">报价</el-button>
			      	 <el-button type="primary" size="mini" @click="offerHandle(props.row.id,props.row.status)" v-if="props.row.status==2||props.row.status==3" style="margin-bottom:10px;">已报价</el-button>
			      	 <el-button type="primary" size="mini" @click="offerHandle(props.row.id,props.row.status,props.row,'offer')" v-if="props.row.status==3 ||props.row.status==5" style="margin-bottom:10px;">预览报价单</el-button>
			      	 <el-button type="primary" size="mini" @click="offerHandle(props.row.id,props.row.status,props.row)" v-if="props.row.status==5" style="margin-bottom:10px;">预览合同</el-button>
			      	 <el-button type="primary" size="mini" @click="getFollowList(props.row.id)" style="margin-bottom:10px;">跟进信息</el-button>
			      	 <el-button type="danger" size="mini" @click="cancelId=props.row.id;cancelVisible=true;" v-if="props.row.status!==6" style="margin-bottom:10px;">作废</el-button>
			      	 <!-- <el-button size="mini" round type="danger" v-if="props.row.status==6" icon="el-icon-delete" @click="delSelectDemand(props.row)" style="margin-bottom:10px;"></el-button> -->
			      </template>
			    </el-table-column>
			    <el-table-column
			      label="需求信息"
				  align="center"
			      width="300"
			      >
			      <template slot-scope="scope">
			      	<div v-if="scope.row.type==1">
						<div v-if="infoActive==scope.$index&&scope.row.demandInfos.length>1"   @click="infoActive=scope.$index" style="cursor: pointer;"> 
							<span  @click.stop="infoActive=-1"  v-for="(item,index) in scope.row.demandInfos" :key="index">{{item}} <br/></span>
							<i class="el-icon-arrow-up" v-if="scope.row.demandInfos.length>=1"></i>
							<i class="el-icon-arrow-down" v-else></i>			
						</div>  
						
						<span v-else  @click="infoActive=scope.$index" style="cursor: pointer;">{{scope.row.demandInfos[0]}}
							<i class="el-icon-arrow-down" v-if="scope.row.demandInfos.length>1"></i>
						</span>
					</div>
				
			      	<!-- <span v-if="scope.row.type==1" v-html="scope.row.serviceDemand"></span> -->
			      	<span v-if="scope.row.type==2">{{scope.row.demandContent}}</span>
			      </template>
			    </el-table-column>
			    <el-table-column
			      label="客户信息"
			      align="center"
			      width="200"
			    >
			      <template slot-scope="scope">
			      	<span>
						<el-popover
							placement="top-start"
							title=""
							width="200"
							trigger="hover"
							:content="scope.row.companyName">
							<span  slot="reference" style="cursor:default;" v-html="$root.OmissionText(scope.row.companyName==null?null:scope.row.companyName,10)"></span>
						</el-popover>
						<br>{{scope.row.contacts}}-{{scope.row.phone}}<br>{{scope.row.email}}
					</span>
			      </template>
			    </el-table-column>
			    <el-table-column
			      label="状态"
				  align="center"
			      prop="status">
			      <template slot-scope="scope">
			      	<span v-if="scope.row.status==0">待确认</span>
			      	<span v-if="scope.row.status==1">已确认</span>
			      	<span v-if="scope.row.status==2">已报价</span>
			      	<span v-if="scope.row.status==3">生成报价单</span>
			      	<span v-if="scope.row.status==4">生成合同</span>
			      	<span v-if="scope.row.status==5">生成订单</span>
			      	<span v-if="scope.row.status==6">已作废</span>
			      </template>
			    </el-table-column>
				<el-table-column
			      label="类型"
				  align="center"
			      prop="type">
			      <template slot-scope="scope">
			      	<span style="color:green" v-if="scope.row.type==1">标准</span>
			      	<span style="color:red" v-if="scope.row.type==2">非标准</span>
			      </template>
			    </el-table-column>
			    <el-table-column
			      label="预算价格"
				  align="center"
				  width="90">
				  <template slot-scope="scope">
			      <span>￥{{scope.row.budgetaryPrice}}</span>
			      </template>
			    </el-table-column>
			    <el-table-column
			      label="备注"
			      width="200"
				  align="center"
			      prop="remark">
			    </el-table-column>
				<el-table-column
			      label="业务员信息"
			      align="center"
			      width="150"
			    >
			    <template slot-scope="scope">
			      	<span>{{scope.row.saleName}}<br>{{scope.row.salePhone}}<br>{{scope.row.saleEmail}}</span>
			      </template>
			    </el-table-column>
				<el-table-column
			      label="操作人"
				  align="center"
			      prop="createName">
			    </el-table-column>
				<el-table-column
			      label="需求编号"
				  align="center"
			      prop="demandCode"
				  width="120">
			    </el-table-column>
			    <el-table-column
			      label="创建时间"
			      width="180"
				  align="center"
			      prop="createTime">
			    </el-table-column>
			</el-table>
		</div>
		<!-- 分页 -->
		<div class="block" style="text-align:right;margin-top:10px;">
		   <el-pagination
		      @size-change="handleSizeChange"
		      @current-change="handleCurrentChange"
		      :current-page.sync="currentPage"
		      :page-sizes="[5, 10, 15, 30]"
		      :page-size="pageSize"
		      layout="sizes, prev, pager, next, total"
		      :total="pageCount">
		    </el-pagination>
		</div>

		<!-- 跟进记录 -->

		<el-dialog title="跟进记录" :visible.sync="toggleFollowVisible" width="90%" :append-to-body="true">
			<div style="width:100%">
				<el-table
				  v-loading="loadingFllow"
			      :data="getDemandDataList"
			      style="width: 100%;height:400px;overflow-y: scroll;">
			      <el-table-column
			        prop="createName"
			        label="创建人">
			      </el-table-column>
			      <el-table-column
			        prop="status"
			        label="状态"
			        >
			        <!--  1创建2确认3报价4生成合同5生成订单6完成7作废报价 -->
			        <template slot-scope="scope">
			        	<span v-if="scope.row.status==1">创建</span>
			        	<span v-if="scope.row.status==2">确认</span>
			        	<span v-if="scope.row.status==3">报价</span>
			        	<span v-if="scope.row.status==4">生成报价</span>
			        	<span v-if="scope.row.status==5">生成合同</span>
			        	<span v-if="scope.row.status==6">生成订单</span>
			        	<span v-if="scope.row.status==7">作废</span>
			        	<span v-if="scope.row.status==8">申请折扣</span>
			        </template>
			      </el-table-column>
			      <el-table-column
			        prop="createTime"
			        label="时间">
			      </el-table-column>
				  <el-table-column
			        prop="remark"
			        label="记录"
			        >
			      </el-table-column>
			    </el-table>
			   
		    	<div style="text-align:right;">
		    		<span style="color: #409EFF;margin-top: 14px;cursor: default;" @click="followVisible=true">新增跟进记录</span>
          			<i class="el-icon-plus" style="font-weight: bold;color: #409EFF;margin-top: 14px;" @click="followVisible=true"></i>
		    	</div>
	         	
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button type="primary" size="small" @click="toggleFollowVisible=false">关闭</el-button>
			</div>			  	
		</el-dialog>

		<!-- 新增跟进记录 -->
		<el-dialog title="添加跟进记录" :visible.sync="followVisible" :append-to-body="true">
			<div style="width:100%">
				<span style="width:10%;vertical-align:top;margin-right: 10px;">联系情况</span>
			    <el-input
			      style="width:70%"
				  type="textarea"
				  :rows="4"
				  placeholder="请输入内容"
				  v-model="remarkText">
				</el-input>
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button size="small" @click="followVisible=false;remarkText=null">取消</el-button>
				<el-button type="primary" size="small" @click="addFollowList">确定</el-button>
			</div>			  	
		</el-dialog>

		<!-- 作废 -->
		<el-dialog title="作废备注" :visible.sync="cancelVisible" :append-to-body="true">
			<div style="width:100%">
				<span style="width:10%;vertical-align:top;margin-right: 10px;">作废原因（必填）</span>
			    <el-input
			      style="width:70%"
				  type="textarea"
				  :rows="4"
				  placeholder="请输入内容"
				  v-model="remarkCancel">
				</el-input>
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button size="small" @click="cancelVisible=false;remarkCancel=null;">取消</el-button>
				<el-button type="primary" size="small" @click="saveDemandStatusCancel(6)">确定</el-button>
			</div>			  	
		</el-dialog>
		
		<!-- 需求新增 -->
		<el-dialog title="新增需求" :visible.sync="needVisible" :append-to-body="true">
			<div style="width:100%">
				
				<el-form ref="form" :model="form[0]" label-width="80px">
					<el-form-item label="需求类型" style="display: inline-block; margin-bottom:10px;">
						<el-radio-group v-model="demandType">
					    	<el-radio :label="1">标准</el-radio>
		   					<el-radio :label="2">非标准</el-radio>
	   					</el-radio-group>
				    </el-form-item>
				    
				    <div v-if="demandType==1">
				    	<el-form-item label="选择公司">
							<el-select no-data-text="加载中"  v-model="demandCustomerId"  filterable @change="customerChange(demandCustomerId,1)" placeholder="选择公司">
							    <el-option
							      v-for="(item,index) in customerList"
							      :key="index"
							      :label="item.custCompanyName"
							      :value="item.custCompanyName">
							    </el-option>
							</el-select>
						</el-form-item>
						<el-form-item label="联系人" v-if="demandCustomerId">
								<el-select v-model="conId" placeholder="选择联系人">
								    <el-option
								      v-for="(item,index) in demandCustomerRow"
								      :key="index"
								      :label="item.conName"
								      :value="item.conId">
								    </el-option>
								</el-select>
						</el-form-item> 
					    <div v-for="(item,index) in form" :key="index"  style="margin-bottom:10px;border-bottom:1px solid #eee;">
							<el-form-item label="产品类别">
							   <el-select v-model="form[index].goodsType" placeholder="请选择">
								    <el-option
								    	v-for="(item,index) of CatNameList"
								    	:key="index"
								      :label="item.catName"
								      :value="item.catId">
								    </el-option>
								  </el-select>
							</el-form-item>
							<el-form-item label="产品需求">
							    <el-form-item label="品牌" style="display: inline-block; margin-bottom:10px;width:40%;">
							    	<el-input placeholder=""  v-model="form[index].model" clearable></el-input>
							    </el-form-item>
							    <el-form-item label="产品型号" style="display: inline-block;margin-bottom:10px;width:40%;">
							    	<el-input placeholder="" style="" v-model="form[index].productName" clearable></el-input>
							    </el-form-item>	
							    <el-form-item label="数量" style="display: inline-block;margin-bottom:10px;width:40%;">
							    	<el-input placeholder="请填写数字" type="number" style="" v-model="form[index].quantity" clearable></el-input>
							    </el-form-item>		
							    <el-form-item label="预估价格" style="display: inline-block;width:40%;">
							    	<el-input placeholder="请填写数字" type="number"  v-model="form[index].budgetaryPrice" clearable></el-input>
							    </el-form-item>	
							    <el-button type="danger" style="margin-left:10px;" icon="el-icon-delete" circle v-if="index!=0" @click="delDemand(index)"></el-button>
							</el-form-item>

						</div>
						<div @click="addDemand" style="text-align: right;margin-right: 10px;cursor: default;color:#409EFF;">
							再加一条~
						</div>
						
						
						<el-form-item label="备注" style="width:70%;">
						    <el-input type="textarea" v-model="remark"></el-input>
						</el-form-item>
				    </div>
					<div v-if="demandType==2">
						
						<el-form-item label="选择公司">
							<el-select no-data-text="加载中" v-model="typeTwoFrom.demandCustomerId" @change="customerChange(typeTwoFrom.demandCustomerId,2)" placeholder="选择公司">
							    <el-option
							      v-for="(item,index) in customerList"
							      :key="index"
							      :label="item.custCompanyName"
							      :value="item.custCompanyName">
							    </el-option>
							</el-select>
						</el-form-item>
						<el-form-item label="联系人" v-if="typeTwoFrom.demandCustomerId">
							<el-select v-model="typeTwoFrom.conId" placeholder="选择联系人">
							    <el-option
							      v-for="(item,index) in typeTwoFrom.demandCustomerRow"
							      :key="index"
							      :label="item.conName"
							      :value="item.conId">
							    </el-option>
							</el-select>
						</el-form-item>
						<el-form-item label="需求填写" style="width:90%;">
						    <el-input type="textarea" v-model="typeTwoFrom.demandTypeRemark"></el-input>
						</el-form-item>
						<el-form-item label="预算总价" style="width:70%;">
						    <el-input type="number" v-model="typeTwoFrom.budgetaryPrice"></el-input>
						</el-form-item>
						<el-form-item label="备注" style="width:70%;">
						    <el-input type="textarea" v-model="typeTwoFrom.remark"></el-input>
						</el-form-item>
					</div>
				</el-form>
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button size="small" @click="needVisible=false;">取消</el-button>
				<el-button type="primary" size="small" @click="submitHandle">确定</el-button>
			</div>			  	
		</el-dialog>

		<!-- 报价 -->
		<el-dialog :title="offerStatus?'编辑报价':'新增报价'" :visible.sync="offerVisible" :append-to-body="true" width="95%" class="offerList">
			<div style="width:100%;">
				<el-form ref="form" :model="form2">
					<el-form-item label="产品型号" style=" margin-bottom:10px;">
					    <el-select
							style="width:300px"
						    v-model="goodsName"
						    multiple
						    filterable
						    remote
						    reserve-keyword
						    placeholder="请输入关键词"
						    :remote-method="remoteMethod"
						    :loading="optLoading">
						    <el-option
						      v-for="item in goodsList"
						      :key="item.modelId"
						      :label="item.title+' '+item.brandName+' '+item.range+' '+item.accuracy+' '+item.outputSignal"
						      :value="item.modelId">
						    </el-option>
						</el-select>
					    <el-button type="primary"  size="small" style="margin-left: 10px;" @click="confirmHandle">确定</el-button>
						
					</el-form-item>
					<el-form-item label="">
						<el-table
							ref="multipleTable"
							class="offerPrice"
						    :data="offerList"
							:header-cell-style="{background:'#EFEDF0'}"
						    style="width: 100%;"
							@selection-change="handleSelectionChange"
						    >
						    <el-table-column
						      type="selection"
						      width="55">
						    </el-table-column>

						    <el-table-column
						     label="操作"
							 width="250"
						    >
						      <template slot-scope="props">
						        <el-button size="mini" round type="primary" icon="el-icon-edit" @click="offerContentHandle(props.row.modelId,props.row)"></el-button>
						        <el-button type="danger" icon="el-icon-delete"  size="mini" round @click="delOfferOption(props.row.modelId)"></el-button>
						        <el-button type="success" size="mini" round @click="addAccessory(props.row.modelId,props.row)">添加辅件</el-button>
						      </template>
						    </el-table-column>
						    <el-table-column
						        prop="id"
						        label="ID"
						        align="center"
						        width="100">
						      </el-table-column>
						      <el-table-column
						        prop="title"
						        label="商品名称"
						        width="120">
							        <template slot-scope="scope">
								      	<span>{{scope.row.title}}</span>
								    </template>
						      </el-table-column>
						      <el-table-column
						      	align="center"
						        label="编辑状态">
						        <template  slot-scope="scope">					        	
						        		<i v-if="scope.row.completeStatus" class="el-icon-check"></i>
						        		<i v-else class="el-icon-close"></i>		
						        </template>
						      </el-table-column>
							  <!-- <el-table-column
							  	align="center"
								prop="quantity"
						        label="总数量">
						      </el-table-column> -->
						      <el-table-column
						        label="报价">
						        <template slot-scope="scope">
						        	<span>
						        		￥{{scope.row.offer}}
						        	</span>
						        </template>
						      </el-table-column>
							   <el-table-column
							    label="标准价">
								<template slot-scope="scope">
									<span>
										￥{{scope.row.standardPrice}}
									</span>
						        </template>
							    </el-table-column>
								<el-table-column
							        label="总数量">
									<template slot-scope="scope">
										<span  v-html="ComputationalValue(scope.row,1)"></span>
									</template>
							    </el-table-column>
								<el-table-column
							        label="总报价">
									<template slot-scope="scope">
										￥<span  v-html="ComputationalValue(scope.row,2)"></span>
									</template>
							    </el-table-column>
								<el-table-column
							        label="总标准价">
									<template slot-scope="scope">
										￥<span  v-html="ComputationalValue(scope.row,3)"></span>
									</template>
							    </el-table-column>
						       <el-table-column
						        prop="goodsImg"
						        label="商品图片"
						        align="center"
						        width="180">
						        <template slot-scope="scope">
						        	<img style="height:50px;" :src="scope.row.goodsImg">
						        </template>	
						      </el-table-column>
						      					    
						      <el-table-column
						        prop="range"
						        label="量程">
						         <template slot-scope="scope">
						        	<span @click="editRange(scope.row)">{{scope.row.range}}
										<i class="el-icon-edit"  style="cursor: default;color:#409EFF;"></i>
						        	</span>
						        </template>
						      </el-table-column>
						      <el-table-column
						        prop="accuracy"
						        label="精度">
						      </el-table-column>
						      <el-table-column
						        prop="outputSignal"
						        label="输出信号">
						      </el-table-column>
						  </el-table>
					</el-form-item>	
				</el-form>

				<!-- 折扣申请日志 -->
					<div style="text-align: center;margin-top: 20px;" v-if="followAppStatus">
						<div style="padding:20px 0;text-align:center;">折扣申请日志</div>
						<el-table
						  class="followAppList"
					      :data="followAppList"
					      style="width: 100%;max-height: 350px;overflow:auto;">
					      <el-table-column
					        prop="createName"
					        label="姓名"
					        width="180">
					      </el-table-column>
					      <el-table-column
					        prop="goodsName"
					        width="300"
					        label="商品名称">
					      </el-table-column>
					      <el-table-column
					        prop="applyDiscount"
					        label="申请折扣">
					      </el-table-column>
					      <el-table-column
					        prop="orgDiscount"
					        label="销售员折扣">
					      </el-table-column>
					       <el-table-column
					        prop="status"
					        label="状态">
					        <template slot-scope="scope">
					        	<span v-if="scope.row.status==0">未确认</span>
					        	<span v-if="scope.row.status==1">同意</span>
					        	<span v-if="scope.row.status==2">拒绝</span>
					        </template>
					      </el-table-column>
					      <el-table-column
					        prop="reason"
					        label="申请说明">
					      </el-table-column>
					      <el-table-column
					        prop="createTime"
					        width="180"
					        label="创建时间">
					      </el-table-column>
					    </el-table>
					</div>
				<!-- 跟进信息 -->
					<div style="text-align: center;margin-top: 20px;" v-if="followDemandStatus">
						<div style="padding:20px 0;text-align:center;">跟进信息</div>
						<el-table
						   class="followDemandList"
					      :data="followDemandList"
					      style="width: 100%;max-height: 350px;overflow:auto;">
					      <el-table-column
					        prop="createId"
					        align="center"
					        label="创建ID"
					        width="80">
					      </el-table-column>
					      <el-table-column
					        prop="createName"
					        label="姓名"
					        width="180">
					      </el-table-column>
					      <el-table-column
					        prop="status"
					        label="状态">
					        <template slot-scope="scope">
					        	<span v-if="scope.row.status==1">创建</span>
					        	<span v-if="scope.row.status==2">确认</span>
					        	<span v-if="scope.row.status==3">报价</span>
					        	<span v-if="scope.row.status==4">生成合同</span>
					        	<span v-if="scope.row.status==5">生成订单</span>
					        	<span v-if="scope.row.status==6">完成</span>
					        	<span v-if="scope.row.status==7">作废报价</span>
					        </template>
					      </el-table-column>
					      <el-table-column
					        prop="remark"
					        width="350"
					        label="备注">
					      </el-table-column>
					      <el-table-column
					        prop="createTime"
					        label="创建时间">
					      </el-table-column>
					    </el-table>
					</div>
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button type="primary" size="small" @click="followAppStatus=!followAppStatus">折扣申请日志</el-button>
				<el-button type="primary" size="small" @click="followDemandStatus=!followDemandStatus">跟进信息</el-button>
				<el-button type="primary" size="small" @click="applicationHandle">申请低折扣</el-button>
				<el-button type="primary" size="small" @click="sureHandle">确定</el-button>
				<el-button size="small" @click="offerVisible=false">取消</el-button>
			</div>			  	
		</el-dialog>
		<!-- 修改商品的量程参数 -->
		<el-dialog
		  title="新增商品属性"
		  :visible.sync="rangeVisible"
		  :append-to-body="true"
		  width="50%">

		  	<el-form  :model="typeForm" ref="typeFormTwo" :rules="typeFormRules">
				<el-form-item label="价格" label-width="120px" prop="price">
			      <el-input v-model="typeForm.price" autocomplete="off" style="width:50%"></el-input>
			    </el-form-item>
			    <el-form-item label="量程" label-width="120px" prop="range">
			      <el-input v-model="typeForm.range" style="width:50%" autocomplete="off"></el-input>
			    </el-form-item>
			    <el-form-item label="精度" label-width="120px" prop="accuracy">
			      <el-input v-model="typeForm.accuracy" style="width:50%" autocomplete="off"></el-input>
			    </el-form-item>
			    <el-form-item label="输出信号" label-width="120px" prop="outputSignal">
			      <el-input v-model="typeForm.outputSignal" style="width:50%" autocomplete="off"></el-input>
			    </el-form-item>
			</el-form>

		  <span slot="footer" class="dialog-footer">
		    <el-button @click="rangeVisible = false;">取 消</el-button>
		    <el-button type="primary" @click="rangeComfirm">确 定</el-button>
		  </span>
		</el-dialog>

		<!-- 编写报价内容 -->
		<el-dialog title="报价信息" :visible.sync="offerContentVisible" :append-to-body="true">
			<div style="width:100%">
				<el-form ref="detailOfferPriceList" :model="detailOfferPriceList" :rules="offerRules" label-width="150px">
					<el-form-item label="商品编码">
					    <span>{{detailOfferPriceList.goodsNo}}</span>
					</el-form-item>
					<el-form-item label="商品信息">
					  <!--   <span>{{detailOfferPriceList.goodsInfo}}</span> -->
					    <span>{{detailOfferPriceList.title}}-{{detailOfferPriceList.range}}-{{detailOfferPriceList.accuracy}}-{{detailOfferPriceList.outputSignal}}</span>
					</el-form-item>
					<el-form-item label="型号编码">
					    <span>{{detailOfferPriceList.modelNo}}</span>
					</el-form-item>
					<el-form-item label="商品报价" prop="offer">
					    <span>￥<el-input placeholder="" type="number" style="width:30%" v-model="detailOfferPriceList.offer" clearable @blur="validateOffer"></el-input></span>
					</el-form-item>
					<el-form-item label="标准价格">
					    <span>￥{{detailOfferPriceList.standardPrice}}</span>
					</el-form-item>
					<el-form-item label="数量" prop="quantity">
					    <el-input placeholder="" type="number" style="width:20%" v-model="detailOfferPriceList.quantity" clearable></el-input>
					</el-form-item>
					<el-form-item label="商品折扣率">
					    <span>{{detailOfferPriceList.discount||0}}%</span>
					</el-form-item>
					<el-form-item label="最终折扣率">
					    <span>{{detailOfferPriceList.finalDiscount||0}}%</span>
					</el-form-item>
					<el-form-item label="总报价">
					    <span>￥{{detailOfferPriceList.offer*detailOfferPriceList.quantity||'0.00'}}</span>
					</el-form-item>
					<!-- <el-form-item label="货期">
						<el-date-picker
					      v-model="detailOfferPriceList.deliveryTime"
					      format="yyyy-MM-dd"
					      value-format="timestamp"
					      type="date"
					      placeholder="选择日期时间">
					    </el-date-picker>
				    </el-form-item> -->
				    <el-form-item label="货期" prop="deliveryStart">
				    	<el-input placeholder="" type="number" style="width:20%" min="0" v-model="detailOfferPriceList.deliveryStart" clearable></el-input>--
				    	<el-input placeholder="" type="number" style="width:20%" min="0" v-model="detailOfferPriceList.deliveryEnd" clearable></el-input> 周
				    </el-form-item>	
					<el-form-item label="备注">
				    	<el-input placeholder="" type="textarea" style="width:80%"  v-model="detailOfferPriceList.remark" clearable></el-input>
				    </el-form-item>	
				</el-form>
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button type="primary" size="small" @click="comfirmOfferPrice">确定</el-button>
				<el-button size="small" @click="offerContentVisible=false">取消</el-button>
			</div>			  	
		</el-dialog>

		<!-- 支付方式 -->

		<el-dialog
		  title="支付方式"
		  :visible.sync="paymentVisible"
		  :append-to-body="true"
		  width="30%">
		  	<el-select v-model="moneyStatus" placeholder="请选择支付方式">
			    <el-option :value="1" label="全额支付">全额支付</el-option>
			    <el-option :value="2" label="30%预付款">30%预付款，70%款到发货 </el-option>
			    <el-option :value="3" label="50%预付款">50%预付款 ，50%款到发货</el-option>
			    <el-option :value="4" label="货到付款">货到付款</el-option>
			    <el-option :value="5" label="月结">月结</el-option>
			    <el-option :value="6" label="其它">其它</el-option>
			</el-select>
	
		  <span slot="footer" class="dialog-footer">
		    <el-button @click="paymentVisible = false;">取 消</el-button>
		    <el-button type="primary" @click="quotedPriceHandle()">确 定</el-button>
		  </span>
		</el-dialog>

		<!-- 申请低折扣 -->
		<el-dialog title="折扣申请" :visible.sync="lowVisible" :append-to-body="true">
			<div style="width:100%">
				<el-form ref="discountsApplication" :model="discountsApplication" label-width="150px" :rules="disApplication">
					<div>
						<el-form-item label="商品信息">
					    <span v-html="discountsApplication.goodsName"></span>
						</el-form-item>
						<el-form-item label="原折扣率">
						    <span>{{discountsApplication.orgDiscount}} %</span>
						</el-form-item>
						<el-form-item label="申请折扣" prop="applyDiscount">
						    <el-input placeholder="" type="number" style="width:40%" v-model="discountsApplication.applyDiscount" min="0" max="100" clearable></el-input> %
						</el-form-item>
						<el-form-item label="备注（申请原因）">
						    <el-input
							  type="textarea"
							  :rows="2"
							  style="width:80%;"
							  placeholder="请输入内容"
							  v-model="discountsApplication.reason">
							</el-input>  
						</el-form-item>
					</div>
				</el-form>
				<div style="border-bottom:1px solid #E4E7ED;"></div>
				
			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button size="small" @click="lowVisible=false">取消</el-button>
				<el-button type="primary" size="small" @click="disApplicationHandle">确定</el-button>
			</div>			  	
		</el-dialog>

		<!-- 生成合同 -->
		<transition name="el-fade-in-linear">
			<customersContract class="customersContract"
				v-show="contractDialogVisible"
				@closeContractDialog="contractDialogVisible=false;"
				:getCustID="getCustID"
				:type="contractType"
				:contractStatus="contractDialogVisible"
			>
			</customersContract>	
		</transition>

		<!-- 辅件 -->
		<transition name="el-fade-in-linear">
			<accessory
			 v-show="accessoryVisible"
			 class="accessoryVisible"
			 @closeDialog="closeAccessoryVisible"
			 @transmitAssistList="transmitAssistList"
			 :accessoryEditList="accessoryEditList"
			 :brandId="brandId"
			 :demandId="demandId"
			 :offerEditId="offerEditId"
			 >
				
			</accessory>
		</transition>
		<!-- 预览合同 -->
		<el-dialog :title="sendTitle?'预览合同':'预览报价单'"  width="80%" :visible.sync="heTongVisible" :append-to-body="true">
			<div style="width:100%">
				
				<object :data="pdfFile" width="100%" height="550px" internalinstanceid="233"></object>

			</div>
			<div style="text-align: right;margin-top: 20px;">
				<el-button type="primary" size="small" @click="sendEmailHandle">发送报价单</el-button>
				<el-button type="primary" size="small" @click="heTongVisible=false">确定</el-button>
			</div>			  	
		</el-dialog>

	</div>
	
</template>
<script type="text/javascript">
import {saveDemand,saveDemandStatus,getDemand,getGoodsCategory,getDemandOptLogList,saveDemandOptLog,getOptApplyiscount,saveDemandOffer,saveDiscountApply,getOfferInfo} from "util/req/customer/demand";
import {formatDateTime} from "util/fn/transTime";
import {getDemadDiscountList,deleteDemand,getGoodsList} from "util/req/offerList/index";
import customersContract from "@/page/admin/offerList/components/customersContract";
import accessory from "@/page/admin/offerList/components/accessory";
import {getCustomerName,getSalesList,getCustomerConList} from "util/req/customer/table";
import {sendContract} from "util/req/contract/index";
import {saveGoodsModel} from "util/req/goods/index";
// import {threadId} from 'worker_threads';
	export default{
		name:'customerDemand',
		props:{
			getCustID:{
				type:Number,
				default:null
			}
		},
		filters: {
			 
		},
		watch:{
			getCustID(id){
				this.getDemandList();
				//vm.aaa();
				this.$root.BackToTop();
			},
			needVisible(status){
				if(status==false){
					this.form=[
			        	{
			        		model:null,
			        		productName:null,
			        		goodsType:null,
			        		quantity:null,
			        		budgetaryPrice:null
			        	}
			        ];
			        this.demandType=1;
			        this.deliveryTime=null;		
			        this.remark=null;
			        this.conId=null;
			        this.demandCustomerId=null;	
					this.demandCustomerRow=[];
			        this.typeTwoFrom={					//非标准内容表格
			        	demandTypeRemark:null, 
			        	demandCustomerId:null,
						demandCustomerRow:[],
			        	conId:null,
			        	deliveryTime:null,
			        	remark:null
			        }
				}
			},
			offerVisible(status){
				if(status==false){		//关闭清空报价内容 
					this.offerList=[];
					this.goodsList=[];
					this.completedEditList=[] //关闭清空已编辑的产品内容
					this.demandId=null;		//清空需求ID
					this.offerEditId=null;  //清空编辑状态需要传的的id
					this.followAppList=[];
					this.followDemandList=[];
					this.followAppStatus=false;
					this.followDemandStatus=false;
				}
			},
			paymentVisible(status){			//支付弹框
				if(status==false){		
					this.moneyStatus=null;
				}
			},
			lowVisible(status){				//关闭申请低折扣弹框
				if(status==false){		
					this.discountsApplication={};
				}
			},
			rangeVisible(status){
				if(status==false){
					this.typeForm={							
				    	range:null,
				    	accuracy:null,
				    	outputSignal:null,
				    	plugKey:null,
				    	plugPrice:null,
				    	sname:null,
				    	price:null
				    }
				}
			},
			heTongVisible(status){
				//this.emailSelectRow=null;
			},
			contractDialogVisible(status){
				if(status==false){
					this.getDemandList();
				}
			},
			cancelVisible(status){
				if(status==false){
					this.remarkCancel=null;
				}
			}
		},
		data(){
			return {
					dataList: [{
				 	  id:null,           //id
			          goodsCategory:null,	//产品类别
			          productName:null,		//产品名称
			          model:null,			//品牌
			          budgetaryPrice:null, //预算价格
			          contacts:null,    //联系人
			          phone:null,       //电话
			          email:null,		//邮箱
			          status:null,  //状态
			          delFlag:null, //删除状态
			          remark:null,  //备注
			          createName:null, //创建人姓名
			          createTime:null, //创建人时间
			          updateTime:null, //修改时间

			        }],
			        form2:null,
			        form:[
			        	{	
			        		model:null,
			        		productName:null,
			        		goodsType:null,
			        		quantity:null,
			        		budgetaryPrice:null
			        	}
			        ],
			        textarea:"",
			        input1:"",
			        value:"",
			        expands: [],
			        pageCount:null,			//分页总数
			        pageSize:5,			//每页条数
			        currentPage:1,			//当前页
			        cancelVisible:false,   //作废弹框 
			        needVisible:false, 		//新增需求
			        offerVisible:false, 		//报价
			        lowVisible:false, 		//低折扣
			        toggleFollowVisible:false,//跟进记录
			        followVisible:false, 	//新增跟进信息
			        customerId:this.getCustID, 		//客户id
			        loading:false,
			        loadingFllow:false,
			        CatNameList:null, 				//产品类型列表
			        deliveryTime:null,			//有效期
			        remark:null,				//备注
			        followList:null,	  			//跟进信息
			        getDemandDataList:[{			//跟进信息列表
			        	remark:null,
			        	status:null,
			        	createTime:null,
			        	createName:null
					}],
					saleId:null,
					salesList:[],
					typeStatus:null,
			        followListId:null, 			//需求ID
			        remarkText:null,			//新增跟进记录文本信息
			        cancelId:null,				//作废选中的需求Id
			        remarkCancel:null, 			//作废原因
			        contractDialogVisible:null, 	//生成合同弹框
			        goodsName:[], 				//品牌名字
			        goodsList:[],
			        optLoading:false,
			        offerList:[],				//报价列表
			        getDiscount:null,            //获取的设定折扣率
			        offerContentVisible:false,		//报价弹框
			        detailOfferPriceList:{		//报价编辑的详情
			        	offer:0
			        },		
			        offerRules:{
			        	quantity:[
					        	{ required: true, trigger: 'blur', message:"数量不能为空且为数字"},
					        	{ pattern:/^[1-9]\d*(\.\d+)?$/, message:"只能输入大于0的数字"},
				        	],
				        offer:[
					        	{ required: true, trigger: 'blur', message:"报价不能为空且为数字"},
					        	{ pattern:/^[1-9]\d*(\.\d+)?$/, message:"只能输入大于0的数字"}
					        	
				        	],
				        deliveryStart:[
					        	{ required: true, trigger: 'blur', message:"报价不能为空且为数字"},
					        	{ pattern:/^[1-9]\d*(\.\d+)?$/, message:"只能输入大于0的数字"}
					        	
				        	],	
				        deliveryEnd:[
					        	{ required: true, trigger: 'blur', message:"报价不能为空且为数字"},
					        	{ pattern:/^[1-9]\d*(\.\d+)?$/, message:"只能输入大于0的数字"}
					        	
				        	]	
			        },
			        completedEditList:[], 			//已编辑的列表
			        multipleSelection: [],			//选中要报价的列
			        paymentVisible:false,			//支付方式弹框
			        moneyStatus:null, 					//支付方式的值
			        demandId:null, 					//需求ID
			        discountsApplication:{
			        	goodsName:''
			        },			//折扣申请
			        disApplication:{
			        	applyDiscount:[
					        	{ required: true, trigger: 'blur', message:"数量不能为空且为数字"},
					        	{ pattern:/^[1-9]\d*(\.\d+)?$/, message:"只能输入大于0的数字"},
				        	]
			        },
			        offerStatus:false,				//报价的状态（新增为false，true为编辑）
			        offerEditId:null, 				//编辑报价需要id
			        customerList:[],					//客户列表
			        demandCustomerId:null,			//添加需求时客户ID
					demandCustomerRow:[],
			        conId:null,
			        demandType:1,					//需求类型
			        typeTwoFrom:{					//非标准内容表格
			        	demandTypeRemark:null, 
			        	demandCustomerId:null,
						demandCustomerRow:[],
			        	deliveryTime:null,
			        	conId:null,
			        	budgetaryPrice:null,
			        	remark:null
			        },
			        rangeVisible:false, 				//修改量程参数弹框
			        typeForm:{							//修改量程参数
				    	range:null,
				    	accuracy:null,
				    	outputSignal:null,
				    	plugPrice:null,
				    	price:null
				    },
				    typeFormRules:{
				    	range:{ required: true, trigger: 'blur', message:"不能为空"},
				    	accuracy:{ required: true, trigger: 'blur', message:"不能为空"},
				    	outputSignal:{ required: true, trigger: 'blur', message:"不能为空"},
				    	price:{ required: true, trigger: 'blur', message:"不能为空"}
				    },
				    keyList:[{				//插头列表
				    	id:null,
				    	skey:null,
				    	sval:null,
				    	sname:null
				    }],
				    followAppList:[], 		//折扣申请日志
				    followDemandList:[],		//需求里面的跟进信息						
			        followAppStatus:false,
			        followDemandStatus:false,
			        accessoryVisible:false, 		//组件弹框
			        brandId:null, 				//传递给辅件的商品ID
			        accessoryEditList:null,		//传递给辅件的数据
			        partsGoodsOffer:null,
			        partsTotalOffer:null,
			        partsQuantity:null,
			        heTongVisible:false, 		//合同预览弹框
			        pdfFile:null,					//合同路径
			        contractType:null, 			//合同类型
			        sendTitle:false, 				//预览报价合同title(false为报价单，true为合同)
			        emailSelectRow:{}, 		//选择预览的内容，用于发送邮件
			        selectLinkMan:null, 		//公司联系人集合
					searchName:null, 		//联系人
					infoActive:null,		//需求信息展示状态
					demandStatus:null,
					selectLinkList:[],
					selectConId:null
			}
		},
		methods:{
		  handleSizeChange(pageSize){	//数据条数改变时
		      	this.loading=true;
		      	this.pageSize=pageSize;
		      	this.currentPage=1;
		      	this.getDemandList();
	      },
	      handleCurrentChange(currentPage){	//选取分页
		      	this.loading=true;
		      	this.currentId=[];
		      	this.getDemandList();
	      },
			capitalizeHandle(value){
				if(value){
					return value.replace("|","<br>");
				}			
			},
			getSalesList(){
				getSalesList(res=>{
					this.salesList=res.data.data.list;
				})
	        },
			getDemandList(){
				var params={
					page:this.currentPage,
					pageSize:this.pageSize
				};
				//查询需求时需要加上的条件
				if(this.selectConId){	//联系人
					params.conId=this.selectConId;
				}
				if(this.selectLinkMan){ //公司名称
					params.keys=this.selectLinkMan;
				} 
				if(this.saleId){ //负责人名称
					params.saleId=this.saleId;
				}
				if(this.demandStatus){ //状态
					params.status=this.demandStatus;
				}
				if(this.typeStatus){ //需求类型
					params.type=this.typeStatus;
				}
				//console.log(this.selectLinkMan,this.searchName,this.saleId)
				this.loading=true;
				getDemand(params,res=>{
					if(res.msgCode==200){
						res=res.data;
						this.dataList=res.list;
						this.pageCount=res.pageCount;
						setTimeout(()=>{
							this.loading=false;
						},200)
					}else{
						setTimeout(()=>{
							this.loading=false;
						},200)
					}
					
				})
			},
			getTypeList(){	//查询产品类别
				getGoodsCategory(res=>{	
					this.CatNameList=res.data.list;
				})
				getCustomerName(null,res=>{
					res=res.data.data;
	      			this.customerList=res.list;
				})
			},
			getFollowList(id){	//获取跟进记录
				this.toggleFollowVisible=true;
				var params={
					demandId:id
				}
				this.loadingFllow=true;
				this.followListId=id;
				getDemandOptLogList(params,res=>{
					this.getDemandDataList=res.data.list;
					setTimeout(()=>{
						this.loadingFllow=false;
					},200)
				})
			},
			addFollowList(){	//新增跟进记录			
				var params={
					demandId:this.followListId,
					remark:this.remarkText
				}
				saveDemandOptLog(params,res=>{
					if(res.msgCode=='200'){
						this.followVisible=false;
						this.getFollowList(this.followListId);
						this.$message({
				            type: 'success',
				            message: '添加记录成功'
				        });
					}else{
						this.$message({
				            type: 'info',
				            message: '添加记录失败'
				        });
					}
					this.remarkText=null; 		//清空输入框
				})
			},
			saveDemandStatus(id,status){					//需求列表状态改变（确认）
				var params={
					id:id,
					status:status
				};
				this.$confirm('您确定修改要当前需求的状态！', '修改提醒', {
		          confirmButtonText: '确定',
		          cancelButtonText: '取消',
          		  type: 'warning'
		          }).then(() => {
			            saveDemandStatus(params,res=>{
							if(res.msgCode==200){
								this.$message({
						            type: 'success',
						            message: '需求状态修改成功'
						        }); 
						        this.getDemandList();
							}else{
								this.$message({
						            type: 'info',
						            message: '需求状态修改失败'
						        });
							}
						})
			        }).catch(() => {
			          this.$message({
			            type: 'info',
			            message: '已取消修改'
			          });          
			        });
				
			},
			saveDemandStatusCancel(status){			//需求状态改变（作废）
				if(this.remarkCancel==null){
					this.$message({
				            type: 'info',
				            message: "作废原因不能为空"
				        });
				}
				var params={
					id:this.cancelId,
					status:status,
					remark:this.remarkCancel||{}
				};
				saveDemandStatus(params,res=>{
					if(res.msgCode==200){
						this.$message({
				            type: 'success',
				            message: res.msg
				        }); 
				        this.cancelVisible=false;
				        this.getDemandList();
					}else{
						this.$message({
				            type: 'info',
				            message: res.msg
				        });
					}
				})
			},
			addDemand(){	//添加一条商品
				var params={
						model:null,
		        		productName:null,
		        		goodsType:null,
		        		quantity:null,
		        		budgetaryPrice:null
				}
				this.form.push(params);
			},
			delDemand(index){	//删除一条商品
				this.form.splice(index,1);
			},
			lineFeed(val){
		      return val.split('|')
		    },
			submitHandle(){		//添加需求提交
				var totolPrice=0;
				for(var i=0;i<this.form.length;i++){
					this.form[i].budgetaryPrice=Number(this.form[i].budgetaryPrice)
					totolPrice+=this.form[i].budgetaryPrice;
				}

				var params;
				if(this.demandType==1){
					//检验填写内容是否为空
					var subStatus=false;
					for(var i=0;i<this.form.length;i++){
						var item=this.form[i];
						for(var key in item){
							if(item[key]==null ||item[key]==''){
								subStatus=false;
							}else{
								subStatus=true;
							}
						}
					}
					// if(this.deliveryTime==null ||this.deliveryTime==""){
					// 	subStatus=false;
					// }
					if(subStatus==false){
						this.$message('请填写完整的内容');
						return false
					}

					params={
						conId:this.conId,
						type:this.demandType,
						// deliveryTime:formatDateTime(this.deliveryTime,1),
						remark:this.remark,
						budgetaryPrice:totolPrice,
						demandGoodsList:this.form
					}
				}else{
					var typeTwoStatus=false;
					for(var key in this.typeTwoFrom){
						if( key!='remark'){
							if(this.typeTwoFrom[key]==null){
								typeTwoStatus=false							
							}else{
								typeTwoStatus=true
							}
						}
					}
					if(typeTwoStatus==false){
						this.$message('请填写完整的内容');
						return false
					}
					params={
						conId:this.typeTwoFrom.conId,
						budgetaryPrice:this.typeTwoFrom.budgetaryPrice,
						// deliveryTime:formatDateTime(this.typeTwoFrom.deliveryTime,1),
						type:this.demandType,
						demandContent:this.typeTwoFrom.demandTypeRemark,
						remark:this.typeTwoFrom.remark
					}
				}
				if(params.conId==null){
					this.$message('请填写联系人');
					return false
				}
				console.log(params);

				saveDemand(params,res=>{	//提交表单
					if(res.msgCode==200){
						this.$message({
				            type: 'success',
				            message: res.msg
				        }); 
					}else{
						this.$message({
				            type: 'info',
				            message: res.msg
				        });
					}
					this.needVisible=false;
					this.getDemandList();
				})
			},
			remoteMethod(query){ 	//搜索关键品牌
				if(query !== ''){
					this.optLoading=true
					getGoodsList({keys:query,isParts:0},res=>{
						//console.log(res);
						this.goodsList=res.data.goodsList;
						setTimeout(()=>{
							this.optLoading=false
						},0)						
					})
				}
			},
			confirmHandle(){	//确认选中品牌
				var selectGoodsList=[];
				
				this.goodsName.forEach(item=>{
					this.goodsList.forEach(res=>{
						if(res.modelId==item){
							selectGoodsList.push(res)
						}
					})
				})

				//选中的列表添加到表格数据中
				selectGoodsList=JSON.parse(JSON.stringify(selectGoodsList));
				var oldInx=[],newInx=[];
				for(let k=0;k<this.offerList.length;k++){
					oldInx.push(this.offerList[k].modelId);
				}
				for(let i=0;i<selectGoodsList.length;i++){	
					newInx.push(selectGoodsList[i].modelId);
				}
				var newSave=oldInx.concat(newInx);
				var newSave = new Set(newSave);
				newSave = Array.from(newSave);
				for (var i = 0; i <oldInx.length; i++) {
					for (var j = 0; j <newSave.length; j++) {
						if(oldInx[i]==newSave[j]){
							newSave.splice(j,1)
						}
					}
				}
				console.log(newSave);
				if(newSave.length>0){
					for(let i=0;i<selectGoodsList.length;i++){	
						for(let k=0;k<newSave.length;k++){
							if(newSave[k]==selectGoodsList[i].modelId){
								this.offerList.push(selectGoodsList[i])
							}
						}
					}
				}
				
				this.goodsName=[];
			},
			offerHandle(id,status,row,offer){		//打开报价弹框,获取报价列表,折扣

				 if(status==5){			//已生成合同需要预览PDF
					this.heTongVisible=true;
					this.pdfFile=row.contractFile;
					this.sendTitle=true;
					this.emailSelectRow=row;
					console.log(row);
				 	return
				 }else if(status==3 && offer=='offer'){
				 	this.heTongVisible=true;
					this.pdfFile=row.offerFile;
					this.sendTitle=false;
					this.emailSelectRow=row;
					console.log(row);
				 	return
				 }
				 this.offerVisible=true;
				 this.demandId=id;
				 if(status==1){			//此时为报价状态，需要获取一次申请折扣信息，查看是否有申请折扣信息
				 	getDemadDiscountList({demandId:id},res=>{
				 		this.followAppList=res.data.disCountList;
				 	})
				 	return
				 }
				 getOfferInfo({demandId:id},res=>{
				 	if(res.data==null){
				 		this.offerStatus=false;		//offerStatus 为false是处于新增状态
				 	}else{
				 		this.offerStatus=true;
				 		var colum=res.data.offerInfo;
				 		//此段为编辑状态下缺少的数据
				 		for(var i=0;i<colum.goodsList.length;i++){
				 			colum.offerGoodsList[i].title=colum.goodsList[i].title;
				 			colum.offerGoodsList[i].range=colum.goodsList[i].range;
				 			colum.offerGoodsList[i].accuracy=colum.goodsList[i].accuracy;
				 			colum.offerGoodsList[i].outputSignal=colum.goodsList[i].outputSignal;
				 			colum.offerGoodsList[i].deliveryTime=(new Date(colum.offerGoodsList[i].deliveryTime)).getTime();
				 			colum.offerGoodsList[i].modelId=colum.goodsList[i].modelId;
				 			colum.offerGoodsList[i].standardPrice=colum.goodsList[i].standardPrice;

				 			colum.goodsList[i].offer=colum.offerGoodsList[i].offer;//把报价塞回列表
							colum.goodsList[i].quantity=colum.offerGoodsList[i].quantity
							colum.goodsList[i].goodsOffer=colum.offerGoodsList[i].goodsOffer
				 			var result=[];
				 			var partslists=colum.offerGoodsList[i].partsList;

				 			for (var j = 0; j < partslists.length; j++) {
				 				var parts={};
				 				parts.accuracy=partslists[j].accuracy
								parts.brandName=partslists[j].brandName
								parts.deliveryTime=partslists[j].deliveryTime 
								parts.discount=partslists[j].discount 
								parts.finalDiscount=partslists[j].finalDiscount 
								parts.goodsNo=partslists[j].goodsNo 
								parts.goodsOffer=partslists[j].goodsOffer 
								parts.goodsInfo=partslists[j].goodsInfo 
								parts.modelId=partslists[j].modelId 
								parts.modelNo=partslists[j].modelNo 
								parts.offer=partslists[j].offer 
								parts.outputSignal=partslists[j].outputSignal 
								parts.price=partslists[j].price 
								parts.quantity=partslists[j].quantity 
								parts.range=partslists[j].range 
								parts.standardPrice=partslists[j].standardPrice
								parts.title=partslists[j].title
								parts.deliveryStart=partslists[j].deliveryStart
								parts.deliveryEnd=partslists[j].deliveryEnd
								parts.remark=partslists[j].remark
								result.push(parts);
				 			}
							//colum.goodsList[i].partslist=result
				 			colum.offerGoodsList[i].offerGoodsList=result;
				 			//colum.offerGoodsList[i].offerGoodsList=colum.offerGoodsList[i].partsList

				 			colum.goodsList[i].partsList=colum.offerGoodsList[i]

				 			colum.goodsList[i].completeStatus=true;		//每个列表状态都是已编辑
				 		}

				 		this.partsGoodsOffer=res.data.offerInfo.partsGoodsOffer;
				 		this.partsTotalOffer=res.data.offerInfo.partsTotalOffer;
				 		this.partsQuantity=res.data.offerInfo.partsQuantity;

				 		this.offerList=JSON.parse(JSON.stringify(res.data.offerInfo.goodsList));
						//this.offerList=JSON.parse(JSON.stringify(res.data.offerInfo.offerGoodsList));
				 		this.completedEditList=JSON.parse(JSON.stringify(res.data.offerInfo.offerGoodsList));
				 		this.offerEditId=res.data.offerInfo.id;

				 		console.log('offerList',this.offerList);
						 console.log('completedEditList',this.completedEditList);

				 		//此段为报价里面的折扣申请信息，跟进信息
				 		this.followAppList=res.data.offerInfo.discountApplyList;
				 		this.followDemandList=res.data.offerInfo.optLogList
				 	}
				 })
			},
			offerContentHandle(modelId,row){	//筛选出可编辑内容数据
				getOptApplyiscount({demandId:this.demandId,modelNo:row.modelNo,goodsNo:row.goodsNo},res=>{		//获取折扣
					//console.log(row);
				 	this.getDiscount=res.data.disCount;
				 	//this.keyList=res.data.configList;
				 	console.log(res.data.disCount);
					this.offerContentVisible=true;		
					var newArr=this.offerList.filter(item=>{
						return item.modelId==modelId
					})
					this.detailOfferPriceList=JSON.parse(JSON.stringify(newArr[0]));
					this.detailOfferPriceList.discount=res.data.disCount;
					this.$set(this.detailOfferPriceList,"discount",res.data.disCount)	
					for(var i=0;i<this.offerList.length;i++){
						if(this.offerList[i].modelId==modelId){
							this.$set(this.offerList[i],'discount',res.data.disCount)
						}
					}	
					if(this.completedEditList.length!=0){			//如过有保存信息，才进行过滤，查看是否保留过修改
							var editArr=this.completedEditList.filter(item=>{
								return item.modelId==modelId
							})
							if(editArr.length!=0){
								//this.detailOfferPriceList={}
								var obj=JSON.parse(JSON.stringify(editArr[0]))
								this.detailOfferPriceList=obj;						
								console.log(this.detailOfferPriceList);
								this.detailOfferPriceList.discount=res.data.disCount;
							}
					}else{
						
					}
				})
			},
			comfirmOfferPrice(){	//确定报价内容,将编辑的内容保存起来
				this.$refs.detailOfferPriceList.validate(valid=>{
		    		if(valid){
		    			var priceDiscount=Number(this.detailOfferPriceList.offer)/Number(this.detailOfferPriceList.standardPrice)*100;
						this.$set(this.detailOfferPriceList,"finalDiscount",priceDiscount)
						if(priceDiscount<Number(this.detailOfferPriceList.discount)){
							this.$alert('最终折扣率低于你的权限,请您申请折扣或者修改价格', '折扣率提醒', {
					          confirmButtonText: '确定',
		        			});	
							return 
						}
						if(!this.detailOfferPriceList.deliveryEnd){
							this.$message({
					          message: '货期没有填写完整',
					          type: 'warning'
					        });
							return
						}
						var idx;
						if(this.completedEditList.length!=0){			//如何有保存信息，才进行过滤，查看是否保留过修改
							for(var i=0;i<this.completedEditList.length;i++){
								if(this.completedEditList[i].modelId==this.detailOfferPriceList.modelId){
									idx=i;
								}
							}
						}

						if(typeof idx =="number"){
							this.completedEditList.splice(idx,1,this.detailOfferPriceList);
						}else{
							this.completedEditList.push(this.detailOfferPriceList);//暂时将编辑好的内容存到一个数组里，等待筛选				
						}
						for(var s=0;s<this.offerList.length;s++){	//新增的报价商品回返回一个数据状态给this.offerList(已编辑)
							if(this.offerList[s].modelId==this.detailOfferPriceList.modelId){
								
								this.$set(this.offerList[s],'completeStatus',true);
								var newItem=this.offerList[s];
									newItem.offer=this.detailOfferPriceList.offer;
									newItem.goodsOffer=this.detailOfferPriceList.goodsOffer;
									newItem.quantity=this.detailOfferPriceList.quantity;
									this.offerList.splice(s,1,newItem)
							}
						}
						console.log(this.completedEditList);
						this.detailOfferPriceList={};
						this.offerContentVisible=false;
		    		}
		    	})	
			},
			delOfferOption(modelId){
				//根据id删除选中的内容
				var s=0;var f=0;
				for(var i=0;i<this.offerList.length;i++){
					if(this.offerList[i].modelId==modelId){ 				
							s=i;
					}
				}
				for(var j=0;j<this.completedEditList.length;j++){
					if(this.completedEditList[j].modelId==modelId){ 				
							f=j;
					}
				}
				this.offerList.splice(s,1);
				if(f!='' ||f!=null){this.completedEditList.splice(f,1)}
			},
			handleSelectionChange(val) {	//选中报价内容
				this.multipleSelection=val;
		    },
		    sureHandle(){
		    	var j=[];
		    	for(var i=0;i<this.multipleSelection.length;i++){
		    		for(var s=0;s<this.completedEditList.length;s++){
		    			if(this.multipleSelection[i].modelId==this.completedEditList[s].modelId){
		    				j.push(i)
		    			}else{

		    			}
		    		}
		    	}
		    	//没有选中内容提醒
		    	if(j.length==0){
		    		this.$alert('没有可以提交的内容，请勾选完善内容', '报价提醒', {
			          confirmButtonText: '确定',
			        }).catch(() => {

               		});
			        return
		    	}else if(j.length!=0 &&this.multipleSelection.length>this.completedEditList.length){	//编写内容与勾选对不上
		    		//debugger;
		    		this.$alert('勾选的内容没有完善信息', '报价提醒', {
			          confirmButtonText: '确定',
			        }).catch(() => {
			        	
               		});
			        return
		    	}else{

		    		this.paymentVisible=true;		    		
		    	}
		    },
		    validateOffer(){
		      	var priceDiscount=Number(this.detailOfferPriceList.offer)/Number(this.detailOfferPriceList.standardPrice)*100;
				this.$set(this.detailOfferPriceList,"finalDiscount",priceDiscount)
		    },
		    quotedPriceHandle(){
		    	this.$confirm('您确定申请报价！', '报价提醒', {
			          confirmButtonText: '确定',
			          cancelButtonText: '取消',
			          type: 'warning'
			        }).then(() => {
			        	var totalOffer=0,discount=0,standardPrice=0,quantity=0,finalDiscount=0,paramsList=[],partsTotalOffer=0,partsQuantity=0,partsStandardPrice=0;
			        	var goodsInfo=''; 
			        	var check=[];
				    	for(var i=0;i<this.multipleSelection.length;i++){
				    		for(var s=0;s<this.completedEditList.length;s++){
				    			if(this.multipleSelection[i].modelId==this.completedEditList[s].modelId){
				    				check.push(s);
				    				//将在选中列表的辅件数据塞回选中的发送数据列表
				    				if(this.multipleSelection[i].partsList){
				    					this.completedEditList[s].partsList=this.multipleSelection[i].partsList
				    				}
				    				
				    			}
				    		}
				    	}

						console.log(check);

			        	for(var i=0;i<this.completedEditList.length;i++){

			        		for(var s=0;s<check.length;s++){
			        			
			        			if(i==check[s]){
									totalOffer +=Number(this.completedEditList[i].offer)*Number(this.completedEditList[i].quantity);	//总报价
					        		standardPrice+=Number(this.completedEditList[i].standardPrice)*Number(this.completedEditList[i].quantity);//总标准价
					        		//辅件的计算
					        		if( this.completedEditList[i].partsList && this.completedEditList[i].partsList.offerGoodsList){
										var partsLists=this.completedEditList[i].partsList.offerGoodsList;
										if(partsLists!=null && partsLists.length > 0){
											for (var k = 0; k < partsLists.length; k++) {
												totalOffer+=Number(partsLists[k].offer * partsLists[k].quantity);
												standardPrice+=Number(partsLists[k].goodsOffer * partsLists[k].quantity);
												partsQuantity+=Number(partsLists[k].quantity);
											}
						        		 }
					        		}
					        		discount=Number(this.completedEditList[i].discount);	//折扣率
									quantity+=Number(this.completedEditList[i].quantity);	//总数量
					        		paramsList.push({
										// supplierId:65,// 供应商ID
										goodsModelId:this.completedEditList[i].modelId,
										goodsNo:this.completedEditList[i].goodsNo,// 商品编号
										goodsInfo:this.completedEditList[i].title+"—"+this.completedEditList[i].range+"—"+this.completedEditList[i].accuracy+"—"+this.completedEditList[i].outputSignal ,// 商品信息（名称，品牌，类别，型号）
										modelNo:this.completedEditList[i].modelNo,// 产品编号
										offer:Number(this.completedEditList[i].offer),// 商品报价
										goodsOffer:Number(this.completedEditList[i].standardPrice),// 商品标准价
										quantity:Number(this.completedEditList[i].quantity),// 数量
										discount:Number(this.completedEditList[i].discount),// 业务员折扣率
										finalDiscount:Math.round(this.completedEditList[i].finalDiscount*100)/100,// 最终折扣
										// deliveryTime:formatDateTime(this.completedEditList[i].deliveryTime),// 货期
										deliveryStart:this.completedEditList[i].deliveryStart,
										deliveryEnd:this.completedEditList[i].deliveryEnd,
										remark:this.completedEditList[i].remark,
										goodsModel:{
											goodsNo:this.completedEditList[i].goodsNo,
											range:this.completedEditList[i].range,
											accuracy:this.completedEditList[i].accuracy,
											outputSignal:this.completedEditList[i].outputSignal,
											price:this.completedEditList[i].price
										},
										partsList:partsLists
							        })
			        			}
			        		}	
			        	}
				        
			        	var params={
			        		 id:this.offerEditId ||{},
			        		 demandId:Number(this.demandId),
			        		 totalOffer:totalOffer,//总报价
			        		 goodsOffer:standardPrice,//总标准价
			        		 quantity:quantity+partsQuantity,//总数量
			        		 discount:discount,//业务员折扣率
			        		 finalDiscount:Math.round(((totalOffer+partsTotalOffer)/(standardPrice+partsStandardPrice))*100*100)/100, //最终折扣率
			        		 moneyStatus:this.moneyStatus,		//支付方式
			        		 offerGoodsList:paramsList||{}
			        	}
			        	console.log(params);
			        	saveDemandOffer(params,res=>{
			        		if(res.msgCode==200){
			        			this.$message({
						            type: 'success',
						            message: res.msg
						        });
						        this.getDemandList();
			        		}else{
			        			this.$message({
						            type: 'info',
						            message: res.msg
						        });
			        		}
			        	})
			        	this.paymentVisible = false;
			        	this.offerVisible=false;
			        }).catch((err) => {
			        	console.log(err);
			          this.$message({
			            type: 'info',
			            message: '已取消报价'
			          });          
			        });
		    },
		    applicationHandle(){	//申请低折扣
		    	
		    	if(this.multipleSelection.length==1){
					this.lowVisible=true;
					
					for(var i=0;i<this.multipleSelection.length;i++){
						this.discountsApplication.goodsName=this.multipleSelection[i].title+"-"+this.multipleSelection[i].range+"-"+this.multipleSelection[i].accuracy+"-"+this.multipleSelection[i].outputSignal
						this.discountsApplication.modelNo=this.multipleSelection[i].modelNo
						this.discountsApplication.goodsNo=this.multipleSelection[i].goodsNo
						getOptApplyiscount({demandId:this.demandId,modelNo:this.multipleSelection[i].modelNo,goodsNo:this.multipleSelection[i].goodsNo},res=>{
							this.$set(this.discountsApplication,'orgDiscount',res.data.disCount)
							//.orgDiscount=res.data.disCount;	
						})
					}
					
					
		    	}else if(this.multipleSelection.length>1){
		    		this.$message({
			            type: 'info',
			            message: '当次申请折扣只能选中一个'
			        }); 
		    	}else{
		    		this.$message({
			            type: 'info',
			            message: '请勾选内容再进行申请低折扣'
			        });  
		    	}
		    },
		    disApplicationHandle(){					//确认提交申请折扣
		    	//console.log(this.discountsApplication);
		    	this.discountsApplication.demandId =this.demandId;
		    	this.$refs.discountsApplication.validate(valid=>{
		    		if(valid){
		    			saveDiscountApply(this.discountsApplication,res=>{
		    				if(res.msgCode==200){
		    					this.$message({
						            type: 'success',
						            message: res.msg
						        });
						        this.lowVisible=false;
						        getDemadDiscountList({demandId:this.demandId},res=>{
							 		this.followAppList=res.data.disCountList;
							 	})
		    				}else{
		    					this.$message({
						            type: 'info',
						            message: res.msg
						        });
		    				}
		    			})	
		    		}else{
		    			
		    		}
		    	})
		    	
		    },
		    editRange(row){	//修改量程参数
		    	this.rangeVisible=true;
		    	this.typeForm.goodsNo=JSON.parse(JSON.stringify(row.goodsNo));
		    },
		    rangeComfirm(){
		    	
		    	// console.log(this.typeForm);
		    	this.typeForm.delFlag=2;
		    	this.$refs.typeFormTwo.validate((valid)=>{
		    		if(valid){
		    			saveGoodsModel(this.typeForm,res=>{
		    				if(res.msgCode==200){
		    					this.$message({
						            type: 'success',
						            message: res.msg
						        }); 
						        this.rangeVisible=false;
						        this.getDemandList();
		    				}else{
		    					this.$message({
						            type: 'info',
						            message: res.msg
						        }); 
		    				}
		    			})
		    		}
		    	})
		  //   	for(var i=0;i<this.offerList.length;i++){
		  //   		if(this.offerList[i].modelId==this.typeForm.modelId){
		  //   			this.offerList.splice(i,1,this.typeForm);
		  //   			this.$set(this.offerList[i],"standardPrice",this.typeForm.price);
		  //   			this.$set(this.offerList[i],"offer",'');
		  //   			this.$set(this.offerList[i],"completeStatus",false);
		  //   		}
		  //   	}
		  //   	//当修改量程参数之后，之前报价的信息删除
		  //   	if(this.completedEditList.length==0){return}
		  //   	for(var s=0;s<this.completedEditList.length;s++){
				// 	if(this.completedEditList[s].modelId==this.typeForm.modelId){ 				
				// 			this.completedEditList.splice(s,1)
				// 	}
				// }

		    },
		    addAccessory(modelId,row){ 	 	//打开辅件编写页面
		    	this.brandId=modelId;
		    	this.accessoryVisible=true;
		    	console.log(1,row);
		    	if(row.partsList){
		    		this.accessoryEditList=JSON.parse(JSON.stringify(row.partsList));
		    	}
		    	//console.log(row);
		    },
		    closeAccessoryVisible(){
		    	this.accessoryVisible=false;
		    },
		    transmitAssistList(assistList){//辅件确认
		    	//把从选取辅件的参数放回列表

		    	for(var i=0;i<this.offerList.length;i++){
		    		if(this.offerList[i].modelId==assistList.linkModelId){
		    			this.$set(this.offerList[i],"partsList",assistList);
						var item=JSON.parse(JSON.stringify(this.offerList[i]))
						item.partsList=assistList;
						this.offerList.splice(i,1,item)
		    		}
		    	}
		    	console.log(this.offerList);
		    },
		    customerChange(val,state){	//客户选择公司发生改变
			console.log('tag')
		    	this.typeTwoFrom.conId=null;
		    	this.conId=null;
		    	this.searchName=null;
				var item=this.customerList.filter(res=>{
					return res.custCompanyName==val
				})
				getCustomerConList({custCode:item[0].custCode},data=>{
					//console.log(data.data.list);
					//this.selectLinkList=data.data.list
					if(state==1){
						this.demandCustomerRow=data.data.list
					}else{
						this.typeTwoFrom.demandCustomerRow=data.data.list
					}
				})
		    },
		    delSelectDemand(row){		//删除一个需求
	    		this.$confirm('此操作将永久删除该需求, 是否继续?', '提示', {
		          confirmButtonText: '确定',
		          cancelButtonText: '取消',
		          type: 'warning'
		        }).then(() => {
		        	deleteDemand({demandCode:row.demandCode},res=>{
		        		if(res.msgCode==200){
		        			 this.$message({
					            type: 'success',
					            message: res.msg
					          });
		        			 this.getDemandList();
		        		}else{
		        			this.$message({
					            type: 'info',
					            message: res.msg
					        });
		        		}
		        	})
		        }).catch(() => {
		          this.$message({
		            type: 'info',
		            message: '已取消删除'
		          });          
		        });
		    },
		    sendEmailHandle(){	//发送邮件
		    	console.log(this.emailSelectRow);

		    	this.$confirm('此操作发送报价单于'+this.emailSelectRow.contacts+', 是否继续?', '提示', {
		          confirmButtonText: '确定',
		          cancelButtonText: '取消',
		          type: 'warning'
		        }).then(() => {
		        	var params;
		        	if(!this.sendTitle){
			        	params={
							offerCode:this.emailSelectRow.offerCode,
							status:1
						}
		        	}else{
		        		params={
							offerCode:this.emailSelectRow.offerCode,
							status:2,
							contractCode:this.emailSelectRow.contractCode
						}
		        	}
					console.log(params);
		        	sendContract(params,res=>{
		        		if(res.msgCode==200){
		        			 this.$message({
					            type: 'success',
					            message: res.msg
					          });
		        			 this.getDemandList();
		        		}else{
		        			this.$message({
					            type: 'info',
					            message: res.msg
					        });
		        		}
		        	})
		        }).catch((err) => {
		        	console.log(err);
		          this.$message({
		            type: 'info',
		            message: '已取消删除'
		          });          
		        });
		    },
			// getCustomerConList(){
			// 	getCustomerConList(res=>{

			// 	})
			// },
			searchLinkName(val){	//查询联系人
				var item=this.customerList.filter(res=>{
					return res.custCompanyName==val
				})
				console.log(item)
				getCustomerConList({custCode:item[0].custCode},data=>{
					this.selectLinkList=data.data.list
				})
			},
			selectSearchState(state){
				if(this.demandStatus==state){
					this.demandStatus=null
				}else{
					this.demandStatus=state;
					this.getDemandList();
				}
				
			},
			ComputationalValue(row,state){	//计算总报价3，标准间3，数量1
				console.log('row',row)
				if(state==1){
					var num=0;
					if(row.hasOwnProperty('partsList')){
						for(let i=0;i<row.partsList.offerGoodsList.length;i++){
							num+=Number(row.partsList.offerGoodsList[i].quantity)
						}
					}
					num=num+Number(row.quantity);
					return num||0
				}else if(state==2){
					var price=0;
					if(row.hasOwnProperty('partsList')){
						for(let i=0;i<row.partsList.offerGoodsList.length;i++){
							price+=Number(row.partsList.offerGoodsList[i].offer)*Number(row.partsList.offerGoodsList[i].quantity)
						}
						console.log('tag')
					}
					price=price+Number(row.offer)*Number(row.quantity);
					return price||0
				}else if(state==3){
					var price=0;
					if(row.hasOwnProperty('partsList')){
						for(let i=0;i<row.partsList.offerGoodsList.length;i++){
							price+=Number(row.partsList.offerGoodsList[i].goodsOffer)*Number(row.partsList.offerGoodsList[i].quantity)
						}
					}
					price=price+Number(row.goodsOffer)*Number(row.quantity);
					return price||0
				}
			}
		},
		mounted(){
			this.getSalesList();
			this.getTypeList();
			if(this.$route.query.cid){
				this.selectLinkMan=this.$route.query.cid;
			}	 
			this.getDemandList();
		},
		components:{
			customersContract,
			accessory
		}
	}
</script>
<style  lang="scss" scoped>
	.customerDemand{
		background-color:#fff;
		border-radius:4px;
		width:100%;
		padding:20px;
		box-sizing:border-box;
		position:relative;
	}
	.customerDemand /deep/ th{
		background-color:#EFEDF0!important;
	}
	.customerDemand /deep/ ::-webkit-scrollbar {
		height:10px;
		width: 7px;
		// border-radius: 4px;
	}
	.offerPrice /deep/ ::-webkit-scrollbar {
		height:10px;
		width: 7px;
		// border-radius: 4px;
	}
	.followAppList /deep/ ::-webkit-scrollbar {
		height:9px;
		width: 7px;
		// border-radius: 4px;
	}
	.followDemandList /deep/ ::-webkit-scrollbar {
		height:9px;
		width: 7px;
		// border-radius: 4px;
	}
	.customersContract{
		position:absolute;
		left:0;
		top:0;
		width:100%;
		min-height:100%;
		background-color:#fff;
		z-index:1000;
	}
	.accessoryVisible{
		position:fixed;
		left:0;
		top:0;
		width:100%;
		min-height:100%;
		background:rgba(0,0,0,0.6);
		z-index:2085;
	}
	.offerList /deep/ .el-dialog{
		margin-top:5vh!important;
	}
	.state>span{
		padding:6px 12px;
		background:#111112;
		border-radius:5px;
		font-size:12px;
		cursor:pointer;
		margin-right:10px;
		color:#fff;
	}
</style>